{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "01-Decision Trees and Random Forests in Python.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "include_colab_link": true
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.5.1"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/shanksghub/FootballStats/blob/master/DTFSipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pEfdML0BDpms",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# https://pypi.python.org/pypi/pydot\n",
        "!apt-get -qq install -y graphviz && pip install -q pydot\n",
        "import pydot"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PCvk-lUkhf7l",
        "colab_type": "text"
      },
      "source": [
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dZIuTY_ghf7m",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "%matplotlib inline"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XnWuANEdhf7q",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "96J5g3_dhf7r",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "url = 'https://raw.githubusercontent.com/shanksghub/FootballStats/master/FootballStats.csv'\n",
        "df = pd.read_csv(url)\n",
        "# Dataset is now stored in a Pandas Dataframe"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TDBeK7fBhf7w",
        "colab_type": "code",
        "outputId": "4e318cc8-65dc-4b7d-d093-7b89d68940fd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 326
        }
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>position</th>\n",
              "      <th>appearances</th>\n",
              "      <th>goals</th>\n",
              "      <th>tackles</th>\n",
              "      <th>passes</th>\n",
              "      <th>assists</th>\n",
              "      <th>shots</th>\n",
              "      <th>hit woordwork</th>\n",
              "      <th>crosses</th>\n",
              "      <th>blocks</th>\n",
              "      <th>clearances</th>\n",
              "      <th>headed clearances</th>\n",
              "      <th>clean sheets</th>\n",
              "      <th>saves</th>\n",
              "      <th>punches</th>\n",
              "      <th>goals conceded</th>\n",
              "      <th>yellow cards</th>\n",
              "      <th>red cards</th>\n",
              "      <th>fouls</th>\n",
              "      <th>offsides</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Sergio Agüero</td>\n",
              "      <td>Forward</td>\n",
              "      <td>23</td>\n",
              "      <td>17</td>\n",
              "      <td>16</td>\n",
              "      <td>538.0</td>\n",
              "      <td>6</td>\n",
              "      <td>84</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aymeric Laporte</td>\n",
              "      <td>Defender</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>30</td>\n",
              "      <td>2313.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>69</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>Forward</td>\n",
              "      <td>26</td>\n",
              "      <td>17</td>\n",
              "      <td>13</td>\n",
              "      <td>739.0</td>\n",
              "      <td>7</td>\n",
              "      <td>87</td>\n",
              "      <td>1</td>\n",
              "      <td>49</td>\n",
              "      <td>21</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>21.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Pierre-Emerick Aubameyang</td>\n",
              "      <td>Forward</td>\n",
              "      <td>25</td>\n",
              "      <td>15</td>\n",
              "      <td>19</td>\n",
              "      <td>518.0</td>\n",
              "      <td>4</td>\n",
              "      <td>63</td>\n",
              "      <td>3</td>\n",
              "      <td>26</td>\n",
              "      <td>13</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Harry Kane</td>\n",
              "      <td>Forward</td>\n",
              "      <td>22</td>\n",
              "      <td>14</td>\n",
              "      <td>7</td>\n",
              "      <td>446.0</td>\n",
              "      <td>4</td>\n",
              "      <td>77</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>18</td>\n",
              "      <td>11</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                        name  position  appearances  ...  red cards  fouls  offsides\n",
              "0              Sergio Agüero   Forward           23  ...       15.0   18.0       0.0\n",
              "1            Aymeric Laporte  Defender           27  ...        2.0    0.0       0.0\n",
              "2              Mohamed Salah   Forward           26  ...        0.0   20.0      21.0\n",
              "3  Pierre-Emerick Aubameyang   Forward           25  ...        0.0   11.0      17.0\n",
              "4                 Harry Kane   Forward           22  ...        0.0   23.0       7.0\n",
              "\n",
              "[5 rows x 21 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VNOzrqw5hf75",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tOoai2oQhf76",
        "colab_type": "code",
        "outputId": "4ed5acb6-9402-4862-c9ab-f3ce7bf3ad0d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        }
      },
      "source": [
        "df.describe()\n"
      ],
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>appearances</th>\n",
              "      <th>goals</th>\n",
              "      <th>tackles</th>\n",
              "      <th>passes</th>\n",
              "      <th>assists</th>\n",
              "      <th>shots</th>\n",
              "      <th>hit woordwork</th>\n",
              "      <th>crosses</th>\n",
              "      <th>blocks</th>\n",
              "      <th>clearances</th>\n",
              "      <th>headed clearances</th>\n",
              "      <th>clean sheets</th>\n",
              "      <th>saves</th>\n",
              "      <th>punches</th>\n",
              "      <th>goals conceded</th>\n",
              "      <th>yellow cards</th>\n",
              "      <th>red cards</th>\n",
              "      <th>fouls</th>\n",
              "      <th>offsides</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>45.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>45.000000</td>\n",
              "      <td>44.000000</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>24.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>24.521739</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>68.086957</td>\n",
              "      <td>862.822222</td>\n",
              "      <td>29.043478</td>\n",
              "      <td>23.695652</td>\n",
              "      <td>2.826087</td>\n",
              "      <td>20.630435</td>\n",
              "      <td>22.173913</td>\n",
              "      <td>41.652174</td>\n",
              "      <td>17.565217</td>\n",
              "      <td>3.543478</td>\n",
              "      <td>13.347826</td>\n",
              "      <td>6.608696</td>\n",
              "      <td>12.282609</td>\n",
              "      <td>2.111111</td>\n",
              "      <td>7.136364</td>\n",
              "      <td>11.809524</td>\n",
              "      <td>4.625000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.438024</td>\n",
              "      <td>5.420127</td>\n",
              "      <td>308.964495</td>\n",
              "      <td>409.217007</td>\n",
              "      <td>124.664342</td>\n",
              "      <td>31.973510</td>\n",
              "      <td>9.153759</td>\n",
              "      <td>39.234542</td>\n",
              "      <td>37.806116</td>\n",
              "      <td>56.184307</td>\n",
              "      <td>31.133870</td>\n",
              "      <td>10.980197</td>\n",
              "      <td>27.638313</td>\n",
              "      <td>11.509374</td>\n",
              "      <td>16.991060</td>\n",
              "      <td>3.399346</td>\n",
              "      <td>10.538061</td>\n",
              "      <td>12.229987</td>\n",
              "      <td>7.654567</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>17.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>23.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>7.500000</td>\n",
              "      <td>633.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>25.500000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>23.500000</td>\n",
              "      <td>748.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>6.500000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>26.000000</td>\n",
              "      <td>9.750000</td>\n",
              "      <td>34.500000</td>\n",
              "      <td>1153.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>53.500000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>21.250000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>61.250000</td>\n",
              "      <td>11.250000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>7.750000</td>\n",
              "      <td>27.250000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>20.750000</td>\n",
              "      <td>5.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>27.000000</td>\n",
              "      <td>17.000000</td>\n",
              "      <td>2115.000000</td>\n",
              "      <td>2313.000000</td>\n",
              "      <td>691.000000</td>\n",
              "      <td>93.000000</td>\n",
              "      <td>58.000000</td>\n",
              "      <td>197.000000</td>\n",
              "      <td>143.000000</td>\n",
              "      <td>175.000000</td>\n",
              "      <td>97.000000</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>93.000000</td>\n",
              "      <td>47.000000</td>\n",
              "      <td>55.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>33.000000</td>\n",
              "      <td>40.000000</td>\n",
              "      <td>28.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       appearances      goals      tackles  ...  red cards      fouls   offsides\n",
              "count    46.000000  46.000000    46.000000  ...  44.000000  42.000000  24.000000\n",
              "mean     24.521739   5.000000    68.086957  ...   7.136364  11.809524   4.625000\n",
              "std       2.438024   5.420127   308.964495  ...  10.538061  12.229987   7.654567\n",
              "min      17.000000   0.000000     0.000000  ...   0.000000   0.000000   0.000000\n",
              "25%      23.000000   0.000000     7.500000  ...   0.000000   0.250000   0.000000\n",
              "50%      25.500000   3.000000    23.500000  ...   0.000000   9.000000   1.000000\n",
              "75%      26.000000   9.750000    34.500000  ...  15.000000  20.750000   5.500000\n",
              "max      27.000000  17.000000  2115.000000  ...  33.000000  40.000000  28.000000\n",
              "\n",
              "[8 rows x 19 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1njB8XLX1bJD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = df.drop(['appearances','hit woordwork','crosses','assists','name','blocks','fouls','goals conceded','headed clearances','clearances','saves','punches','yellow cards','red cards','offsides','clean sheets'],axis=1)\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oCyQfPdm9vF2",
        "colab_type": "code",
        "outputId": "80c0b405-7152-45bd-db8a-2084a898a5ef",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>goals</th>\n",
              "      <th>tackles</th>\n",
              "      <th>passes</th>\n",
              "      <th>shots</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>46.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>45.000000</td>\n",
              "      <td>46.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5.000000</td>\n",
              "      <td>68.086957</td>\n",
              "      <td>862.822222</td>\n",
              "      <td>23.695652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>5.420127</td>\n",
              "      <td>308.964495</td>\n",
              "      <td>409.217007</td>\n",
              "      <td>31.973510</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>7.500000</td>\n",
              "      <td>633.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>23.500000</td>\n",
              "      <td>748.000000</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>9.750000</td>\n",
              "      <td>34.500000</td>\n",
              "      <td>1153.000000</td>\n",
              "      <td>53.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>17.000000</td>\n",
              "      <td>2115.000000</td>\n",
              "      <td>2313.000000</td>\n",
              "      <td>93.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           goals      tackles       passes      shots\n",
              "count  46.000000    46.000000    45.000000  46.000000\n",
              "mean    5.000000    68.086957   862.822222  23.695652\n",
              "std     5.420127   308.964495   409.217007  31.973510\n",
              "min     0.000000     0.000000     1.000000   0.000000\n",
              "25%     0.000000     7.500000   633.000000   0.000000\n",
              "50%     3.000000    23.500000   748.000000   0.500000\n",
              "75%     9.750000    34.500000  1153.000000  53.500000\n",
              "max    17.000000  2115.000000  2313.000000  93.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CpmvVD3AfA4x",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = df.dropna(axis = 0, how ='any') \n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uNfXRcFf_X3f",
        "colab_type": "code",
        "outputId": "48ab3ecc-f05b-4144-ca5a-c3eb82fee639",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1444
        }
      },
      "source": [
        ">>> df.fillna(0)\n"
      ],
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>position</th>\n",
              "      <th>goals</th>\n",
              "      <th>tackles</th>\n",
              "      <th>passes</th>\n",
              "      <th>shots</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Forward</td>\n",
              "      <td>17</td>\n",
              "      <td>16</td>\n",
              "      <td>538.0</td>\n",
              "      <td>84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Defender</td>\n",
              "      <td>2</td>\n",
              "      <td>30</td>\n",
              "      <td>2313.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Forward</td>\n",
              "      <td>17</td>\n",
              "      <td>13</td>\n",
              "      <td>739.0</td>\n",
              "      <td>87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Forward</td>\n",
              "      <td>15</td>\n",
              "      <td>19</td>\n",
              "      <td>518.0</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Forward</td>\n",
              "      <td>14</td>\n",
              "      <td>7</td>\n",
              "      <td>446.0</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Forward</td>\n",
              "      <td>12</td>\n",
              "      <td>9</td>\n",
              "      <td>1273.0</td>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Forward</td>\n",
              "      <td>12</td>\n",
              "      <td>30</td>\n",
              "      <td>789.0</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Forward</td>\n",
              "      <td>12</td>\n",
              "      <td>22</td>\n",
              "      <td>920.0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Forward</td>\n",
              "      <td>10</td>\n",
              "      <td>28</td>\n",
              "      <td>551.0</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Forward</td>\n",
              "      <td>10</td>\n",
              "      <td>18</td>\n",
              "      <td>744.0</td>\n",
              "      <td>93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Forward</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>569.0</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Forward</td>\n",
              "      <td>9</td>\n",
              "      <td>21</td>\n",
              "      <td>1018.0</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Forward</td>\n",
              "      <td>9</td>\n",
              "      <td>22</td>\n",
              "      <td>725.0</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Forward</td>\n",
              "      <td>8</td>\n",
              "      <td>17</td>\n",
              "      <td>529.0</td>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Forward</td>\n",
              "      <td>10</td>\n",
              "      <td>31</td>\n",
              "      <td>560.0</td>\n",
              "      <td>55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>11</td>\n",
              "      <td>28</td>\n",
              "      <td>1423.0</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Forward</td>\n",
              "      <td>11</td>\n",
              "      <td>18</td>\n",
              "      <td>5.0</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>9</td>\n",
              "      <td>41</td>\n",
              "      <td>663.0</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>731.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>702.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>748.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>721.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>741.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>791.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>826.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>740.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>666.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>532.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Defender</td>\n",
              "      <td>3</td>\n",
              "      <td>42</td>\n",
              "      <td>753.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Defender</td>\n",
              "      <td>4</td>\n",
              "      <td>69</td>\n",
              "      <td>520.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Defender</td>\n",
              "      <td>1</td>\n",
              "      <td>31</td>\n",
              "      <td>1222.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Defender</td>\n",
              "      <td>3</td>\n",
              "      <td>37</td>\n",
              "      <td>1187.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Defender</td>\n",
              "      <td>3</td>\n",
              "      <td>49</td>\n",
              "      <td>958.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Defender</td>\n",
              "      <td>1</td>\n",
              "      <td>31</td>\n",
              "      <td>1222.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Defender</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>770.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Defender</td>\n",
              "      <td>3</td>\n",
              "      <td>40</td>\n",
              "      <td>930.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Defender</td>\n",
              "      <td>1</td>\n",
              "      <td>2115</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Defender</td>\n",
              "      <td>1</td>\n",
              "      <td>33</td>\n",
              "      <td>633.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Defender</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>1282.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Defender</td>\n",
              "      <td>0</td>\n",
              "      <td>37</td>\n",
              "      <td>1153.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Defender</td>\n",
              "      <td>2</td>\n",
              "      <td>32</td>\n",
              "      <td>989.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>1574.0</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>6</td>\n",
              "      <td>19</td>\n",
              "      <td>1352.0</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>1463.0</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>3</td>\n",
              "      <td>55</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>56</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      position  goals  tackles  passes  shots\n",
              "0      Forward     17       16   538.0     84\n",
              "1     Defender      2       30  2313.0      0\n",
              "2      Forward     17       13   739.0     87\n",
              "3      Forward     15       19   518.0     63\n",
              "4      Forward     14        7   446.0     77\n",
              "5      Forward     12        9  1273.0     67\n",
              "6      Forward     12       30   789.0      8\n",
              "7      Forward     12       22   920.0      3\n",
              "8      Forward     10       28   551.0     49\n",
              "9      Forward     10       18   744.0     93\n",
              "10     Forward      9        7   569.0     30\n",
              "11     Forward      9       21  1018.0     57\n",
              "12     Forward      9       22   725.0     81\n",
              "13     Forward      8       17   529.0     47\n",
              "14     Forward     10       31   560.0     55\n",
              "15  Midfielder     11       28  1423.0     79\n",
              "16     Forward     11       18     5.0     21\n",
              "17  Midfielder      9       41   663.0     63\n",
              "18  Goalkeeper      0        0   731.0      0\n",
              "19  Goalkeeper      0        0   702.0      0\n",
              "20  Goalkeeper      0        0   748.0      0\n",
              "21  Goalkeeper      0        0   721.0      0\n",
              "22  Goalkeeper      0        0   741.0      0\n",
              "23  Goalkeeper      0        0   791.0      0\n",
              "24  Goalkeeper      0        0   826.0      0\n",
              "25  Goalkeeper      0        0   740.0      0\n",
              "26  Goalkeeper      0        0   666.0      0\n",
              "27  Goalkeeper      0        0   532.0      0\n",
              "28    Defender      3       42   753.0      0\n",
              "29    Defender      4       69   520.0      0\n",
              "30    Defender      1       31  1222.0      0\n",
              "31    Defender      3       37  1187.0      0\n",
              "32    Defender      3       49   958.0      0\n",
              "33    Defender      1       31  1222.0      0\n",
              "34    Defender      0       25   770.0      0\n",
              "35    Defender      3       40   930.0      0\n",
              "36    Defender      1     2115     1.0      3\n",
              "38    Defender      1       33   633.0      1\n",
              "39    Defender      0       25  1282.0      0\n",
              "40    Defender      0       37  1153.0      0\n",
              "41    Defender      2       32   989.0      0\n",
              "42  Midfielder      1       40  1574.0     10\n",
              "43  Midfielder      6       19  1352.0     40\n",
              "44  Midfielder      1       40  1463.0     16\n",
              "45  Midfielder      3       55  1297.0     56"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pMmUU7hMhf8A",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JFAP-zpKhf8B",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FLTvw173hf8F",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X = df.drop('position',axis=1)\n",
        "y = df['position']"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ml2zxzlihf8J",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Yz5J0uQ4hf8O",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.tree import DecisionTreeClassifier"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ligGAN0Nhf8T",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "dtree = DecisionTreeClassifier()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fKENHZLjeAbJ",
        "colab_type": "code",
        "outputId": "e47cd7e5-12e2-4ea3-e8af-b4b162f70afb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1444
        }
      },
      "source": [
        ">>> df.fillna(0)\n"
      ],
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>position</th>\n",
              "      <th>goals</th>\n",
              "      <th>tackles</th>\n",
              "      <th>passes</th>\n",
              "      <th>shots</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Forward</td>\n",
              "      <td>17</td>\n",
              "      <td>16</td>\n",
              "      <td>538.0</td>\n",
              "      <td>84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Defender</td>\n",
              "      <td>2</td>\n",
              "      <td>30</td>\n",
              "      <td>2313.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Forward</td>\n",
              "      <td>17</td>\n",
              "      <td>13</td>\n",
              "      <td>739.0</td>\n",
              "      <td>87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Forward</td>\n",
              "      <td>15</td>\n",
              "      <td>19</td>\n",
              "      <td>518.0</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Forward</td>\n",
              "      <td>14</td>\n",
              "      <td>7</td>\n",
              "      <td>446.0</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Forward</td>\n",
              "      <td>12</td>\n",
              "      <td>9</td>\n",
              "      <td>1273.0</td>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Forward</td>\n",
              "      <td>12</td>\n",
              "      <td>30</td>\n",
              "      <td>789.0</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Forward</td>\n",
              "      <td>12</td>\n",
              "      <td>22</td>\n",
              "      <td>920.0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Forward</td>\n",
              "      <td>10</td>\n",
              "      <td>28</td>\n",
              "      <td>551.0</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Forward</td>\n",
              "      <td>10</td>\n",
              "      <td>18</td>\n",
              "      <td>744.0</td>\n",
              "      <td>93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Forward</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>569.0</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Forward</td>\n",
              "      <td>9</td>\n",
              "      <td>21</td>\n",
              "      <td>1018.0</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Forward</td>\n",
              "      <td>9</td>\n",
              "      <td>22</td>\n",
              "      <td>725.0</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Forward</td>\n",
              "      <td>8</td>\n",
              "      <td>17</td>\n",
              "      <td>529.0</td>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Forward</td>\n",
              "      <td>10</td>\n",
              "      <td>31</td>\n",
              "      <td>560.0</td>\n",
              "      <td>55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>11</td>\n",
              "      <td>28</td>\n",
              "      <td>1423.0</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Forward</td>\n",
              "      <td>11</td>\n",
              "      <td>18</td>\n",
              "      <td>5.0</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>9</td>\n",
              "      <td>41</td>\n",
              "      <td>663.0</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>731.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>702.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>748.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>721.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>741.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>791.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>826.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>740.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>666.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Goalkeeper</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>532.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Defender</td>\n",
              "      <td>3</td>\n",
              "      <td>42</td>\n",
              "      <td>753.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Defender</td>\n",
              "      <td>4</td>\n",
              "      <td>69</td>\n",
              "      <td>520.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Defender</td>\n",
              "      <td>1</td>\n",
              "      <td>31</td>\n",
              "      <td>1222.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Defender</td>\n",
              "      <td>3</td>\n",
              "      <td>37</td>\n",
              "      <td>1187.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Defender</td>\n",
              "      <td>3</td>\n",
              "      <td>49</td>\n",
              "      <td>958.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Defender</td>\n",
              "      <td>1</td>\n",
              "      <td>31</td>\n",
              "      <td>1222.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Defender</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>770.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Defender</td>\n",
              "      <td>3</td>\n",
              "      <td>40</td>\n",
              "      <td>930.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Defender</td>\n",
              "      <td>1</td>\n",
              "      <td>2115</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Defender</td>\n",
              "      <td>1</td>\n",
              "      <td>33</td>\n",
              "      <td>633.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Defender</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>1282.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Defender</td>\n",
              "      <td>0</td>\n",
              "      <td>37</td>\n",
              "      <td>1153.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Defender</td>\n",
              "      <td>2</td>\n",
              "      <td>32</td>\n",
              "      <td>989.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>1574.0</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>6</td>\n",
              "      <td>19</td>\n",
              "      <td>1352.0</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>1463.0</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Midfielder</td>\n",
              "      <td>3</td>\n",
              "      <td>55</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>56</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      position  goals  tackles  passes  shots\n",
              "0      Forward     17       16   538.0     84\n",
              "1     Defender      2       30  2313.0      0\n",
              "2      Forward     17       13   739.0     87\n",
              "3      Forward     15       19   518.0     63\n",
              "4      Forward     14        7   446.0     77\n",
              "5      Forward     12        9  1273.0     67\n",
              "6      Forward     12       30   789.0      8\n",
              "7      Forward     12       22   920.0      3\n",
              "8      Forward     10       28   551.0     49\n",
              "9      Forward     10       18   744.0     93\n",
              "10     Forward      9        7   569.0     30\n",
              "11     Forward      9       21  1018.0     57\n",
              "12     Forward      9       22   725.0     81\n",
              "13     Forward      8       17   529.0     47\n",
              "14     Forward     10       31   560.0     55\n",
              "15  Midfielder     11       28  1423.0     79\n",
              "16     Forward     11       18     5.0     21\n",
              "17  Midfielder      9       41   663.0     63\n",
              "18  Goalkeeper      0        0   731.0      0\n",
              "19  Goalkeeper      0        0   702.0      0\n",
              "20  Goalkeeper      0        0   748.0      0\n",
              "21  Goalkeeper      0        0   721.0      0\n",
              "22  Goalkeeper      0        0   741.0      0\n",
              "23  Goalkeeper      0        0   791.0      0\n",
              "24  Goalkeeper      0        0   826.0      0\n",
              "25  Goalkeeper      0        0   740.0      0\n",
              "26  Goalkeeper      0        0   666.0      0\n",
              "27  Goalkeeper      0        0   532.0      0\n",
              "28    Defender      3       42   753.0      0\n",
              "29    Defender      4       69   520.0      0\n",
              "30    Defender      1       31  1222.0      0\n",
              "31    Defender      3       37  1187.0      0\n",
              "32    Defender      3       49   958.0      0\n",
              "33    Defender      1       31  1222.0      0\n",
              "34    Defender      0       25   770.0      0\n",
              "35    Defender      3       40   930.0      0\n",
              "36    Defender      1     2115     1.0      3\n",
              "38    Defender      1       33   633.0      1\n",
              "39    Defender      0       25  1282.0      0\n",
              "40    Defender      0       37  1153.0      0\n",
              "41    Defender      2       32   989.0      0\n",
              "42  Midfielder      1       40  1574.0     10\n",
              "43  Midfielder      6       19  1352.0     40\n",
              "44  Midfielder      1       40  1463.0     16\n",
              "45  Midfielder      3       55  1297.0     56"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p2UTO4WPhf8Z",
        "colab_type": "code",
        "outputId": "8cb760cb-fe89-4921-9cde-d79da84050a1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        }
      },
      "source": [
        "dtree.fit(X_train,y_train)"
      ],
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None,\n",
              "                       max_features=None, max_leaf_nodes=None,\n",
              "                       min_impurity_decrease=0.0, min_impurity_split=None,\n",
              "                       min_samples_leaf=1, min_samples_split=2,\n",
              "                       min_weight_fraction_leaf=0.0, presort=False,\n",
              "                       random_state=None, splitter='best')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_vaCNEgGhf8r",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "predictions = dtree.predict(X_test)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IV9YErFihf8x",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.metrics import classification_report,confusion_matrix"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vupuk7vHhf81",
        "colab_type": "code",
        "outputId": "b898ee75-f51e-473f-f149-e3e4bef0cb55",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "print(classification_report(y_test,predictions))"
      ],
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "    Defender       0.60      1.00      0.75         3\n",
            "     Forward       1.00      0.67      0.80         6\n",
            "  Goalkeeper       1.00      1.00      1.00         4\n",
            "  Midfielder       1.00      1.00      1.00         1\n",
            "\n",
            "    accuracy                           0.86        14\n",
            "   macro avg       0.90      0.92      0.89        14\n",
            "weighted avg       0.91      0.86      0.86        14\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jZAEnhLFhf87",
        "colab_type": "code",
        "outputId": "80043293-922d-4815-ca29-c83d879ae712",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "print(confusion_matrix(y_test,predictions))"
      ],
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[3 0 0 0]\n",
            " [2 4 0 0]\n",
            " [0 0 4 0]\n",
            " [0 0 0 1]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IlOQHbbohf9N",
        "colab_type": "code",
        "outputId": "60ecd94e-18c5-47d0-c662-a513cc35c64b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "from IPython.display import Image  \n",
        "from sklearn.externals.six import StringIO  \n",
        "from sklearn.tree import export_graphviz\n",
        "import pydot \n",
        "\n",
        "features = list(df.columns[1:])\n",
        "features"
      ],
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['goals', 'tackles', 'passes', 'shots']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MZTENm-khf9U",
        "colab_type": "code",
        "outputId": "4d4212dd-8861-4061-f222-e284a4928188",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        }
      },
      "source": [
        "dot_data = StringIO()  \n",
        "export_graphviz(dtree, out_file=dot_data,feature_names=features,filled=True,rounded=True)\n",
        "\n",
        "graph = pydot.graph_from_dot_data(dot_data.getvalue())  \n",
        "Image(graph[0].create_png())  "
      ],
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "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\nTkSuQmCC\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J5suOiwphf9b",
        "colab_type": "text"
      },
      "source": [
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fGa_Nj_Ehf9j",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "c3ade5ed-851d-42f1-9c60-6c6074201818"
      },
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "rfc = RandomForestClassifier(n_estimators=100)\n",
        "rfc.fit(X_train, y_train)"
      ],
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n",
              "                       max_depth=None, max_features='auto', max_leaf_nodes=None,\n",
              "                       min_impurity_decrease=0.0, min_impurity_split=None,\n",
              "                       min_samples_leaf=1, min_samples_split=2,\n",
              "                       min_weight_fraction_leaf=0.0, n_estimators=100,\n",
              "                       n_jobs=None, oob_score=False, random_state=None,\n",
              "                       verbose=0, warm_start=False)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oXpRnKhmhf9u",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "rfc_pred = rfc.predict(X_test)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k75XO6MThf9z",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "1aa463a5-f625-40cf-cc52-7b4b49df3403"
      },
      "source": [
        "print(confusion_matrix(y_test,rfc_pred))"
      ],
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[3 0 0 0]\n",
            " [2 4 0 0]\n",
            " [0 0 4 0]\n",
            " [0 0 0 1]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p_nypDV3hf98",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "2697b544-32ea-4dd8-d8a6-ad83e3ac44c6"
      },
      "source": [
        "print(classification_report(y_test,rfc_pred))"
      ],
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "    Defender       0.60      1.00      0.75         3\n",
            "     Forward       1.00      0.67      0.80         6\n",
            "  Goalkeeper       1.00      1.00      1.00         4\n",
            "  Midfielder       1.00      1.00      1.00         1\n",
            "\n",
            "    accuracy                           0.86        14\n",
            "   macro avg       0.90      0.92      0.89        14\n",
            "weighted avg       0.91      0.86      0.86        14\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9VveK-Qkhf-E",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    }
  ]
}